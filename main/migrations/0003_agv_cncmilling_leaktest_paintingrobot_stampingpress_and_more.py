# Generated by Django 5.0.6 on 2024-10-19 09:06

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_remove_team_machine_team_machine_id_delete_machine'),
    ]

    operations = [
        migrations.CreateModel(
            name='AGV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('location_x', models.FloatField(help_text='X coordinate of the location')),
                ('location_y', models.FloatField(help_text='Y coordinate of the location')),
                ('location_z', models.FloatField(help_text='Z coordinate of the location')),
                ('battery_level', models.FloatField(help_text='Battery level in %')),
                ('load_weight', models.FloatField(help_text='Load weight in kg')),
                ('speed', models.FloatField(help_text='Speed in m/s')),
                ('distance_traveled', models.FloatField(help_text='Distance traveled in meters')),
                ('obstacle_detection', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text='Obstacle detection status', max_length=100)),
                ('navigation_status', models.CharField(choices=[('en_route', 'En Route'), ('waiting', 'Waiting'), ('rerouting', 'Rerouting')], help_text='Navigation status', max_length=100)),
                ('vibration_level', models.FloatField(help_text='Vibration level in mm/s')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('wheel_rotation_speed', models.FloatField(help_text='Wheel rotation speed in RPM')),
                ('location_x_OON', models.BooleanField()),
                ('location_y_OON', models.BooleanField()),
                ('location_z_OON', models.BooleanField()),
                ('battery_level_OON', models.BooleanField()),
                ('load_weight_OON', models.BooleanField()),
                ('speed_OON', models.BooleanField()),
                ('distance_traveled_OON', models.BooleanField()),
                ('obstacle_detection_OON', models.BooleanField()),
                ('navigation_status_OON', models.BooleanField()),
                ('vibration_level_OON', models.BooleanField()),
                ('temperature_OON', models.BooleanField()),
                ('wheel_rotation_speed_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
        migrations.CreateModel(
            name='CNCMilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('spindle_speed', models.FloatField(help_text='Spindle speed in RPM')),
                ('tool_wear_level', models.FloatField(help_text='Tool wear level in %')),
                ('cut_depth', models.FloatField(help_text='Cut depth in mm')),
                ('feed_rate', models.FloatField(help_text='Feed rate in mm/min')),
                ('vibration_level', models.FloatField(help_text='Vibration level in mm/s')),
                ('coolant_flow_rate', models.FloatField(help_text='Coolant flow rate in ml/min')),
                ('material_hardness', models.FloatField(help_text='Material hardness in HB (Brinell hardness)')),
                ('power_consumption', models.FloatField(help_text='Power consumption in kWh')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('chip_load', models.FloatField(help_text='Chip load in mm')),
                ('spindle_speed_OON', models.BooleanField()),
                ('tool_wear_level_OON', models.BooleanField()),
                ('cut_depth_OON', models.BooleanField()),
                ('feed_rate_OON', models.BooleanField()),
                ('vibration_level_OON', models.BooleanField()),
                ('coolant_flow_rate_OON', models.BooleanField()),
                ('material_hardness_OON', models.BooleanField()),
                ('power_consumption_OON', models.BooleanField()),
                ('temperature_OON', models.BooleanField()),
                ('chip_load_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
        migrations.CreateModel(
            name='LeakTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('test_pressure', models.FloatField(help_text='Test pressure in bar')),
                ('pressure_drop', models.FloatField(help_text='Pressure drop in bar')),
                ('leak_rate', models.FloatField(help_text='Leak rate in ml/min')),
                ('test_duration', models.FloatField(help_text='Test duration in seconds')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail')], help_text='Test status', max_length=100)),
                ('fluid_type', models.CharField(help_text='Type of fluid used for the test', max_length=100)),
                ('seal_condition', models.CharField(choices=[('good', 'Good'), ('warning', 'Warning'), ('fail', 'Fail')], help_text='Condition of the seal', max_length=100)),
                ('test_cycle_count', models.IntegerField(help_text='Number of test cycles')),
                ('test_pressure_OON', models.BooleanField()),
                ('pressure_drop_OON', models.BooleanField()),
                ('leak_rate_OON', models.BooleanField()),
                ('test_duration_OON', models.BooleanField()),
                ('temperature_OON', models.BooleanField()),
                ('status_OON', models.BooleanField()),
                ('seal_condition_OON', models.BooleanField()),
                ('test_cycle_count_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
        migrations.CreateModel(
            name='PaintingRobot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('spray_pressure', models.FloatField(help_text='Spray pressure in bar')),
                ('paint_thickness', models.FloatField(help_text='Paint thickness in μm (microns)')),
                ('arm_position_x', models.FloatField(help_text='X coordinate of the arm position')),
                ('arm_position_y', models.FloatField(help_text='Y coordinate of the arm position')),
                ('arm_position_z', models.FloatField(help_text='Z coordinate of the arm position')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('humidity', models.FloatField(help_text='Humidity in %RH')),
                ('paint_flow_rate', models.FloatField(help_text='Paint flow rate in ml/min')),
                ('paint_volume_used', models.FloatField(help_text='Paint volume used in liters')),
                ('atomizer_speed', models.FloatField(help_text='Atomizer speed in RPM')),
                ('overspray_capture_efficiency', models.FloatField(help_text='Overspray capture efficiency in %')),
                ('booth_airflow_velocity', models.FloatField(help_text='Booth airflow velocity in m/s')),
                ('solvent_concentration', models.FloatField(help_text='Solvent concentration in %')),
                ('spray_pressure_OON', models.BooleanField()),
                ('paint_thickness_OON', models.BooleanField()),
                ('arm_position_x_OON', models.BooleanField()),
                ('arm_position_y_OON', models.BooleanField()),
                ('arm_position_z_OON', models.BooleanField()),
                ('temperature_OON', models.BooleanField()),
                ('humidity_OON', models.BooleanField()),
                ('paint_flow_rate_OON', models.BooleanField()),
                ('paint_volume_used_OON', models.BooleanField()),
                ('atomizer_speed_OON', models.BooleanField()),
                ('overspray_capture_efficiency_OON', models.BooleanField()),
                ('booth_airflow_velocity_OON', models.BooleanField()),
                ('solvent_concentration_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
        migrations.CreateModel(
            name='StampingPress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('force_applied', models.FloatField(help_text='Force applied in tons')),
                ('cycle_time', models.FloatField(help_text='Cycle time in seconds')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('vibration_level', models.FloatField(help_text='Vibration level in mm/s')),
                ('cycle_count', models.IntegerField(help_text='Count of cycles')),
                ('oil_pressure', models.FloatField(help_text='Oil pressure in bar')),
                ('die_alignment', models.CharField(help_text='Die alignment status', max_length=100)),
                ('sheet_thickness', models.FloatField(help_text='Sheet thickness in mm')),
                ('power_consumption', models.FloatField(help_text='Power consumption in kWh')),
                ('noise_level', models.FloatField(help_text='Noise level in dB')),
                ('lubrication_flow_rate', models.FloatField(help_text='Lubrication flow rate in ml/min')),
                ('force_applied_OON', models.BooleanField()),
                ('cycle_time_OON', models.BooleanField()),
                ('temperature_OON', models.BooleanField()),
                ('vibration_level_OON', models.BooleanField()),
                ('cycle_count_OON', models.BooleanField()),
                ('oil_pressure_OON', models.BooleanField()),
                ('die_alignment_OON', models.BooleanField()),
                ('sheet_thickness_OON', models.BooleanField()),
                ('power_consumption_OON', models.BooleanField()),
                ('noise_level_OON', models.BooleanField()),
                ('lubrication_flow_rate_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
        migrations.CreateModel(
            name='Welding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=100)),
                ('weld_temperature', models.FloatField(help_text='Temperature in °C')),
                ('weld_current', models.FloatField(help_text='Current in A (amperes)')),
                ('weld_voltage', models.FloatField(help_text='Voltage in V')),
                ('weld_time', models.FloatField(help_text='Weld time in milliseconds')),
                ('pressure_applied', models.FloatField(help_text='Pressure in N (newtons)')),
                ('arm_position_x', models.FloatField(help_text='X coordinate of the arm position')),
                ('arm_position_y', models.FloatField(help_text='Y coordinate of the arm position')),
                ('arm_position_z', models.FloatField(help_text='Z coordinate of the arm position')),
                ('wire_feed_rate', models.FloatField(help_text='Wire feed rate in mm/min')),
                ('gas_flow_rate', models.FloatField(help_text='Gas flow rate in l/min')),
                ('weld_strength_estimate', models.FloatField(help_text='Estimated weld strength in N')),
                ('vibration_level', models.FloatField(help_text='Vibration level in mm/s')),
                ('power_consumption', models.FloatField(help_text='Power consumption in kWh')),
                ('weld_temperature_OON', models.BooleanField()),
                ('weld_current_OON', models.BooleanField()),
                ('weld_voltage_OON', models.BooleanField()),
                ('weld_time_OON', models.BooleanField()),
                ('pressure_applied_OON', models.BooleanField()),
                ('arm_position_x_OON', models.BooleanField()),
                ('arm_position_y_OON', models.BooleanField()),
                ('arm_position_z_OON', models.BooleanField()),
                ('wire_feed_rate_OON', models.BooleanField()),
                ('gas_flow_rate_OON', models.BooleanField()),
                ('weld_strength_estimate_OON', models.BooleanField()),
                ('vibration_level_OON', models.BooleanField()),
                ('power_consumption_OON', models.BooleanField()),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the data')),
            ],
        ),
    ]
